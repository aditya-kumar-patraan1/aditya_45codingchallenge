Merge Sorted Array

You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively.

Merge nums1 and nums2 into a single array sorted in non-decreasing order.

The final sorted array should not be returned by the function, but instead be stored inside the array nums1. To accommodate this, nums1 has a length of m + n, where the first m elements denote the elements that should be merged, and the last n elements are set to 0 and should be ignored. nums2 has a length of n.

 


class Solution {
public:
    void merge(vector<int>& A, int m, vector<int>& B, int n) {

        int I=m-1,J=n-1;
        int K = A.size()-1;
        while(I>=0 && J>=0){
            if(A[I]>B[J]){
                A[K] = A[I--]; 
            }
            else{
                A[K] = B[J--];
            }
            K--;
        }

        while(J>=0){
            A[K--] = B[J--];
        }

        while(I>=0){
            A[K--] = A[I--];
        }
    }
};
